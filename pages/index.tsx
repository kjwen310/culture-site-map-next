import type { NextPage } from 'next'
import dynamic from "next/dynamic"
import React, { useState,useEffect, useRef } from 'react'
import axios from 'axios';
import addInfo from '../assets/addInfo.json';
import posCorrection from '../assets/posCorrection.json';
import Head from 'next/head'
import { ResetStyle, GlobalStyle } from '../components/styles/Global.styles';
import Select from '../components/Select';
import Loading from '../components/Loading';
import { AppContainer } from '../components/styles/App.styles'
const Info = dynamic(() => import("../components/Info"), { ssr: false})
const Map = dynamic(() => import("../components/Map"), { ssr:false })

const Home: NextPage = () => {
  const [selectedCity, setSelectedCity] = useState('')
  const [selectedArea, setSelectedArea] = useState('')
  const [cityCulSite, setCityCulSite] = useState([])
  const [culSite, setCulSite] = useState([])

  const [initData, setInitData] = useState(null)
  const [isLoading, setLoading] = useState(false)

  const [isShow, setIsShow] = useState(false)
  const [site, setSite] = useState(null)

  const mapRef = useRef(null)
  const markerRefs = useRef({})

  const [prevMarker, setPrevMarker] = useState(null)
  const [prevIcon, setPrevIcon] = useState(null)

  const cities = {
    '臺北市': { nationalNum: 0, items: [] },
    '新北市': { nationalNum: 0, items: [] },
    '基隆市': { nationalNum: 0, items: [] },
    '桃園市': { nationalNum: 0, items: [] },
    '新竹縣': { nationalNum: 0, items: [] },
    '新竹市': { nationalNum: 0, items: [] },
    '苗栗縣': { nationalNum: 0, items: [] },
    '臺中市': { nationalNum: 0, items: [] },
    '彰化縣': { nationalNum: 0, items: [] },
    '南投縣': { nationalNum: 0, items: [] },
    '雲林縣': { nationalNum: 0, items: [] },
    '嘉義縣': { nationalNum: 0, items: [] },
    '嘉義市': { nationalNum: 0, items: [] },
    '臺南市': { nationalNum: 0, items: [] },
    '高雄市': { nationalNum: 0, items: [] },
    '屏東縣': { nationalNum: 0, items: [] },
    '宜蘭縣': { nationalNum: 0, items: [] },
    '花蓮縣': { nationalNum: 0, items: [] },
    '臺東縣': { nationalNum: 0, items: [] },
    '澎湖縣': { nationalNum: 0, items: [] },
    '金門縣': { nationalNum: 0, items: [] },
    '連江縣': { nationalNum: 0, items: [] },
  }

  useEffect(() => {
    setLoading(true)
    axios.get('api/data')
      .then((data) => {
        setInitData(data.data)
        setLoading(false)
      })
  }, [])

  if (isLoading) return <Loading />
  if (!initData) return <p>No profile data</p>

  const noDataList = ['20180206000001', '20191128000001', '19881111000011', '19870417000002']

  const filteredData = initData.filter((item) => !noDataList.includes(item.caseId) && item.latitude && item.longitude)

  filteredData.forEach((item) => {
    posCorrection.forEach((pos) => {
      if (item.caseId === pos.id) {
        item.latitude = pos.lat;
        item.longitude = pos.lng;
      }
    })
    addInfo.forEach((add) => {
      if (item.caseId === add.id) {
        item.latitude = add.lat;
        item.longitude = add.lng;
        item.pastHistory = add.pastHistory;
        item.buildingFeatures = add.buildingFeatures;
      }
    })

    addCitiesData(item)
  })

  function addCitiesData(item) {
    const targetCity = item.belongCity.slice(0, 3) || ''

    if (item.assetsClassifyName === '國定古蹟') {
      cities[targetCity]?.nationalNum += 1
    }

    cities[targetCity]?.items?.push(item)
  }

  return (
    <>
      <ResetStyle />
      <GlobalStyle />
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppContainer>
        <Select
          mapRef={mapRef}
          cities={cities}
          dataLen={filteredData.length}
          cityCulSite={cityCulSite}
          setCityCulSite={setCityCulSite}
          culSite={culSite}
          setCulSite={setCulSite}
          selectedCity={selectedCity}
          setSelectedCity={setSelectedCity}
          selectedArea={selectedArea}
          setSelectedArea={setSelectedArea}
        />
        <Info
          mapRef={mapRef}
          markerRefs={markerRefs}
          prevMarker={prevMarker}
          setPrevMarker={setPrevMarker}
          prevIcon={prevIcon}
          setPrevIcon={setPrevIcon}
          isShow={isShow}
          setIsShow={setIsShow}
          site={site}
          setSite={setSite}
          cities={cities}
          cityCulSite={cityCulSite}
          culSite={culSite}
          selectedCity={selectedCity}
          selectedArea={selectedArea}
        />
        <Map
          mapRef={mapRef}
          markerRefs={markerRefs}
          prevMarker={prevMarker}
          setPrevMarker={setPrevMarker}
          prevIcon={prevIcon}
          setPrevIcon={setPrevIcon}
          data={filteredData}
          setIsShow={setIsShow}
          setSite={setSite}
        />
      </AppContainer>
    </>
  )
}

export default Home

